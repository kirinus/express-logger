name: NPM Publish
"on":
  release:
    types:
    - published
jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current git repository
      uses: actions/checkout@v2
    - name: Set release version
      id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.event.release.tag_name }} | cut -d "v" -f 2)
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        always-auth: true
        node-version: 13.x
        registry-url: https://registry.npmjs.org
        scope: '@kirinus-digital'
    - name: Publish the package
      run: |
        npm --no-git-tag-version version $RELEASE_VERSION
        npm config set registry https://registry.npmjs.org
        echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
  publish-github:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current git repository
      uses: actions/checkout@v2
    - name: Set release version
      id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.event.release.tag_name }} | cut -d "v" -f 2)
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14.17.1
        registry-url: https://registry.npmjs.org
        scope: '@kirinus'
    - name: Publish the package
      run: |
        sed -i 's/@kirinus-digital/@kirinus/g' package.json
        npm --no-git-tag-version version $RELEASE_VERSION
        npm config set registry https://npm.pkg.github.com
        echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
